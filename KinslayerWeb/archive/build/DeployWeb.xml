<project name="build kinslayermud" default="build" basedir=".">

	<property name="branch" value="trunk" />
	<property name="revision" value="" />

	<property name="checkout-root" value="${branch}/KinslayerWeb"/>

        <property name="tomcat-home" value=""/>
        <property name="tomcat-bin" value="${tomcat-home}/bin"/>
        <property name="web-root" value=""/>
        <property name="web-webinf" value="${web-root}/WEB-INF"/>
        <property name="web-classes" value="${web-webinf}/classes"/>
        <property name="web-lib" value="${web-webinf}/lib"/>
        <property name="web-view" value="${web-root}/View"/>
        <property name="checkout-src-web" value="${checkout-root}/src-web"/>
        <property name="checkout-src-core" value="${checkout-root}/src-core"/>
        <property name="checkout-webinf" value="${checkout-root}/WebContent/WEB-INF"/>
        <property name="checkout-lib" value="${checkout-webinf}/lib/"/>
        <property name="checkout-classes" value="${checkout-webinf}/classes"/>
        <property name="checkout-view" value="${checkout-root}/View"/>
	
	<path id="classpath">
		<fileset dir="${checkout-lib}">
			<include name="**/*.jar"/>
		</fileset>
	</path>

	<target name="build" depends="compile, inject-updates" />

	<target name="svn-checkout">
		<exec dir="." executable="svn">
			<arg line="checkout http://localhost/svn/kmud-live/${branch}/KinslayerWeb${revision} --username=mmason --password='W@qsablast' -q" />
		</exec>
	</target>
	
	<target name="compile">

		<antcall target="build-sass" />

		<mkdir dir="${checkout-classes}"/>
		<javac debug="true" destdir="${checkout-classes}" classpathref="classpath">
			<src path="${checkout-src-web}" />
			<src path="${checkout-src-core}" />
		</javac>

		<copy file="${checkout-src-web}/struts.xml" todir="${checkout-classes}" />
	</target>

        <target name="check-sass-uptodate">
                <uptodate property="sass-up-to-date">
                        <srcfiles dir= "${checkout-view}/Styles/" includes="**/*.scss"/>
                        <mapper type="glob" from="*.scss" to="${checkout-view}/Styles/*.css"/>
                </uptodate>
        </target>

        <target name="build-sass" unless="sass-up-to-date" depends="check-sass-uptodate">

                <echo>Building Sass</echo>
                <apply executable="sass" dir="${checkout-view}/Styles" relative="true" verbose="true" force="true" failonerror="true">
                        <arg value="--unix-newlines" />
                        <srcfile />
                        <targetfile />
                        <fileset dir="${checkout-view}/Styles" includes="**/*.scss" excludes="**/_*" />
                        <mapper type="glob" from="*.scss" to="*.css"/>
                </apply>
        </target>


	<target name="stop-tomcat">
		<echo>
			Stopping tomcat.
		</echo>
		<exec dir="." executable="${tomcat-bin}/TomcatControl.sh">
			<arg line="stop"/>
		</exec>
	</target>

	<target name="inject-updates">
		<mkdir dir="${web-root}"/>
		<mkdir dir="${web-webinf}"/>

		<copy file="${checkout-root}/.htaccess" todir="${web-root}/../" failonerror="false" />

		<copy todir="${web-view}">
			<fileset dir="${checkout-view}"/>
		</copy>
		
		<copy todir="${web-webinf}">
			<fileset dir="${checkout-webinf}"/>
		</copy>
	</target>
	
	<target name="spawn-tomcat">
		<echo>
			Spawning new tomcat instance.
		</echo>
		<exec dir="." executable="${tomcat-bin}/TomcatControl.sh">
			<arg line="start"/>
		</exec>

		<antcall target="svn-cleanup" />
	</target>
	
</project>
